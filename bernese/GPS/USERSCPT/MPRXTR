package MPRXTR;
@ISA = ("RUNBPE");
# ============================================================================
#
# Name    :  MPRXTR
#
# Purpose :  Execute MPRXTR
#
# Remark  :  reject binary observation files
#            if the correspsonding option in MPRXTR is enabled
#
# PARAMs  :  PARAM1: NEXTJOB to check whether the last observation file
#                    has been deleted
#            PARAM2: PID of the SNGDIF script of the BPE
#            PARAM3: PID of the protocol script of the BPE
#
# Author  :  M. Meindl
# Created :  20-Oct-2003
#
# Changes :  11-Aug-2011 RD: Updated for version 5.2
#            14-Jun-2013 RD: Call for "deleteFiles" corrected
#            20-Dec-2013 RD/SS: Improve deletion features
#
# ============================================================================
use strict;

use lib $ENV{BPE};
use bpe_util qw(prtGoto prtMess appFile deleteFiles);

sub run {
  my $bpe = shift;

# Get variables
# -------------
  my ($yyssss, $ssss,
      $param1, $param2, $param3,
      $dirPzh, $dirPsh, 
      $extPzh, $extPsh) = 
  $bpe->getKeys(
      '$YSS+0','$S+0',
      'PARAM1','PARAM2','PARAM3',
      'DIR_PZH','DIR_PSH',
      'EXT_PZH','EXT_PSH');

# Run program
# -----------
  my $PGMNAM = "MPRXTR";
  $bpe->RUN_PGMS($PGMNAM);

# Delete rejected binary observation files
# ----------------------------------------
  my $isPsh = 1;
  my $sumFil = $bpe->getKey("$ENV{U}/INP/MPRXTR.INP","SUMMARY");
  my $delFil = $bpe->getKey("$ENV{U}/INP/MPRXTR.INP","DELFIL");
  if ( -e $delFil ) {
    appFile ("Files excluded from processing:",0,"$delFil","$sumFil",1);
    if ( $param1 eq "NEXTJOB" ) {
      open(DEL,"$delFil");   # Check whether a PSH-file was listed for deletion.
      $isPsh = (grep{/${ssss}.${extPsh}/} <DEL>);
      close(DEL);
    }
    deleteFiles($bpe,$delFil,1);
    
# If no files available, jump to the end
# --------------------------------------
    if ( $param1 eq "NEXTJOB" ) {
      my @list = $isPsh ? 
                 glob ("${dirPsh}????${ssss}.${extPsh}") :
                 glob ("${dirPzh}????${ssss}.${extPzh}");

      unless ( @list ) {
        print "No phase observation files left\n";
        $bpe->prtMess("No phase observation files left");
        prtGoto($bpe, $param3);   # Goto end if no observation file is left
      } elsif ( $isPsh ) {
        print "Recreate the network of baselines\n";
        $bpe->prtMess("Recreate the network of baselines");
        prtGoto($bpe, $param2);   # Go back to SNGDIF if a baseline was removed
      }
    }

  } # end of section if a deletion file exists


}
