package ATX2PCV;
@ISA = ("RUNBPE");
# ============================================================================
#
# Name    :  ATX2PCV
#
# Purpose :  Execute ATX2PCV
#            Update phase eccenter file in $X/GEN if required
#
# PARAMs  :
#
# Author  :  R. Dach
# Created :  11-Aug-2011
#
# Changes :
#
# ============================================================================
use strict;

use File::Copy;
use File::Compare;
use lib "$ENV{BPE}";
use bpe_util qw(prtMess prtErr);

sub run {
  my $bpe = shift;

  my ($dirGen) = $bpe->getKeys( 'PTH_GEN' );

  print "U=".$ENV{U}."\n";
  
  use File::Find;

  find( sub {print $File::Find::name,"\n"}, $ENV{U} );

  $bpe->inpOutMenu("","$ENV{U}/PAN/ATX2PCV.INP","$ENV{U}/INP/ATX2PCV.INP","ATX2PCV");

  my $atx = $bpe->getKey("$ENV{U}/INP/ATX2PCV.INP","PHASEXT");
  my $pcvold = $bpe->getKey("$ENV{U}/INP/ATX2PCV.INP","PHASECC");
  my $pcvnew = $bpe->getKey("$ENV{U}/INP/ATX2PCV.INP","PHASRSG");
  prtMess($bpe,"Using base antenna file : $atx");
  prtMess($bpe,"Using bernese PCV       : $pcvold");
  prtMess($bpe,"Creating bernese PCV    : $pcvnew");

  unlink($pcvnew);
  foreach my $f ($atx,$pcvold)
  {
      if( ! -e $f )
      {
         $f =~ /^(?:(.*)[\\\/])?(.*)$/;
         my( $path, $filename ) = ($1,$2);
         my $genfile=$dirGen.'/'.$filename;
         if( ! -e  $genfile )
         {
             prtErr($bpe,"File $filename not available in $path or $dirGen");
             die "File $filename not available";
         }
         prtMess($bpe,"Installing $filename from $dirGen" );
         copy($genfile,$f);
      }
  }

# Run program
# -----------
    my $PGMNAM = "ATX2PCV";
    $bpe->RUN_PGMS($PGMNAM);

# Update the reference PCV file
# --------------------------------------

    if( -e $pcvnew )
    {
       prtMess($bpe,"Updating $pcvold with $pcvnew");
       copy($pcvnew,$pcvold) if -e $pcvnew;
    }
    else
    {
       prtMess($bpe,"Updated PCV $pcvnew not created");
    }
}
